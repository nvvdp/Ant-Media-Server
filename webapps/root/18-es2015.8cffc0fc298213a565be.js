(window.webpackJsonp=window.webpackJsonp||[]).push([[18],{x04h:function(e,t,o){"use strict";o.r(t),o.d(t,"MapsModule",(function(){return _}));var i=o("tyNb"),n=o("ofXK"),a=o("3Pt+"),s=o("fXoL"),r=o("HDdC"),p=o("jtHE"),c=o("XNiG"),l=o("SxV6"),g=o("Kj3r"),d=o("vkgz");const u=["*"];function h(e){return e.replace(/(?:^\w|[A-Z]|\b\w)/g,(function(e,t){return 0===t?e.toLowerCase():e.toUpperCase()})).replace(/\s+/g,"")}let m=(()=>{class e{constructor(e,t,o,i){this.nguiMapComponent=e,this.mapObjectName=t,this.inputs=o,this.outputs=i,this.initialized$=new s.o,this._subscriptions=[],this.nguiMap=this.nguiMapComponent.nguiMap,this.optionBuilder=this.nguiMapComponent.optionBuilder,this.outputs.forEach(e=>this[e]=new s.o),this.mapObjectName=t}ngOnInit(){this.nguiMapComponent.mapIdledOnce?this.initialize():this.nguiMapComponent.mapReady$.subscribe(e=>this.initialize())}initialize(){if(this.objectOptions=this.optionBuilder.googlizeAllInputs(this.inputs,this),"string"==typeof this.objectOptions.position&&delete this.objectOptions.position,"string"==typeof this.objectOptions.center&&delete this.objectOptions.center,this.libraryName){if(!google.maps[this.libraryName])throw e=this.libraryName,Error(`${this.mapObjectName}: library '${e}' is missing, please ensure to include it in a 'libraries' parameter.\n    Example:\n      NguiMapModule.forRoot({\n        apiUrl: 'https://maps.googleapis.com/maps/api/js?libraries=${e}'\n      })\n  `);this.mapObject=new google.maps[this.libraryName][this.mapObjectName](this.objectOptions)}else this.mapObject=new google.maps[this.mapObjectName](this.objectOptions);var e;this.mapObject.setMap(this.nguiMapComponent.map),this.mapObject.mapObjectName=this.mapObjectName,this.mapObject.nguiMapComponent=this.nguiMapComponent,this.nguiMap.setObjectEvents(this.outputs,this,"mapObject"),this.nguiMapComponent.addToMapObjectGroup(this.mapObjectName,this.mapObject),this.initialized$.emit(this.mapObject)}ngOnChanges(e){this.nguiMap.updateGoogleObject(this.mapObject,e)}ngOnDestroy(){this._subscriptions.map(e=>e.unsubscribe()),this.nguiMapComponent.removeFromMapObjectGroup(this.mapObjectName,this.mapObject),this.mapObject&&this.nguiMap.clearObjectEvents(this.outputs,this,"mapObject")}}return e.\u0275fac=function(e){s.fc()},e.\u0275dir=s.Ib({type:e,outputs:{initialized$:"initialized$"},features:[s.zb]}),e})(),b=(()=>{class e{googlizeAllInputs(e,t){let o={};return t.options?(o=t.options,this.onlyOptionsGiven(e,t)||console.error('when "options" are used, other options are ignored')):e.forEach(e=>{void 0!==t[e]&&(o[e]=this.googlize(t[e],{key:e}))}),o}googlizeMultiple(e,t){t=t||{};for(let o in e){let i=e[o];"string"!=typeof i?t[o]=i:t.doNotConverStringToNumber&&i.match(/^[0-9]+$/)||(t[o]=this.googlize(i,{key:o}))}return t}googlize(e,t){t=t||{};let o=e;if("string"==typeof e&&(o="false"!==e&&("0"===e?0:this.getJSONParsed(e,t)||this.getAnyMapObject(e)||this.getAnyMapConstant(e,t)||this.getDateObject(e)||e)),t.key){let e=t.key;o instanceof Array?"bounds"===e?o=new google.maps.LatLngBounds(o[0],o[1]):"icons"===e?o=this.getMapIcons(o):("position"===e||e.match(/^geoFallback/))&&(o=this.getLatLng(o)):o instanceof Object&&("icon"===e?o=this.getMarkerIcon(o):e.match(/ControlOptions$/)&&(o=this.getMapControlOption(o)))}return delete o.doNotConverStringToNumber,delete o.key,o}getLatLng(e){let t;return e[0].constructor===Array?t=e.map(e=>new google.maps.LatLng(e[0],e[1])):!isNaN(parseFloat(e[0]))&&isFinite(e[0])&&(t=new google.maps.LatLng(e[0],e[1])),t}getJSONParsed(e,t){let o;try{if(o=function(e){return"string"==typeof e?(e.match(/^[\+\-]?[0-9\.]+,[ ]*\ ?[\+\-]?[0-9\.]+$/)&&(e="["+e+"]"),JSON.parse(function(e){try{return JSON.parse(e),e}catch(t){return e.replace(/([\$\w]+)\s*:/g,(function(e,t){return'"'+t+'":'})).replace(/'([^']+)'/g,(function(e,t){return'"'+t+'"'}))}}(e))):e}(e),o instanceof Array)o[0].constructor!==Object&&(o=this.getLatLng(o));else if(o===Object(o)){let e=t;e.doNotConverStringToNumber=!0,o=this.googlizeMultiple(o,e)}}catch(i){}return o}getAnyMapObject(e){let t;if(e.match(/^[A-Z][a-zA-Z0-9]+\(.*\)$/))try{t=Function(`return new google.maps.${e};`)()}catch(o){}return t}getAnyMapConstant(e,t){let o;if(e.match(/^([A-Z][a-zA-Z0-9]+)\.([A-Z]+)$/))try{let t=e.match(/^([A-Z][a-zA-Z0-9]+)\.([A-Z]+)$/);o=google.maps[t[1]][t[2]]}catch(i){}else if(e.match(/^[A-Z]+$/))try{let i=t.key.charAt(0).toUpperCase()+t.key.slice(1);o=google.maps[i][e]}catch(i){}return o}getMapControlOption(e){let t=e;for(let o in t)if(t[o]){let e=t[o];if("string"==typeof e?e=e.toUpperCase():"mapTypeIds"===o&&(e=e.map((function(e){return e.match(/^[A-Z]+$/)?google.maps.MapTypeId[e.toUpperCase()]:e}))),"style"===o){let i=o.replace(/Options$/,"")+"Style";t[o]=google.maps[i][e]}else t[o]="position"===o?google.maps.ControlPosition[e]:e}return t}getDateObject(e){let t;if(e.match(/^(\d{4}\-\d\d\-\d\d([tT][\d:\.]*)?)([zZ]|([+\-])(\d\d):?(\d\d))?$/))try{t=new Date(e)}catch(o){}return t}getMapIcons(e){return e.map(e=>(e.icon.path.match(/^[A-Z_]+$/)&&(e.icon.path=google.maps.SymbolPath[e.icon.path]),e))}getMarkerIcon(e){let t=e;(""+t.path).match(/^[A-Z_]+$/)&&(t.path=google.maps.SymbolPath[t.path]);for(let o in t){let e=t[o];"anchor"===o||"origin"===o||"labelOrigin"===o?t[o]=new google.maps.Point(e[0],e[1]):"size"!==o&&"scaledSize"!==o||(t[o]=new google.maps.Size(e[0],e[1]))}return t}onlyOptionsGiven(e,t){for(let o=0;o<e.length;o++){let i=e[o];if("options"!==i&&void 0!==t[i])return!1}return!0}}return e.\u0275fac=function(t){return new(t||e)},e.\u0275prov=s.Jb({token:e,factory:e.\u0275fac}),e})(),f=(()=>{class e{getCurrentPosition(e){return e=e||{timeout:5e3},new r.a(t=>{navigator.geolocation?navigator.geolocation.getCurrentPosition(e=>{t.next(e),t.complete()},e=>t.error(e),e):t.error("Browser Geolocation service failed.")})}}return e.\u0275fac=function(t){return new(t||e)},e.\u0275prov=s.Jb({token:e,factory:e.\u0275fac}),e})();const C=new s.s("NG_MAP_CONFIG_TOKEN");let O=(()=>{class e{constructor(e){this.config=e,this.api$=new p.a(1),this.config=this.config||{apiUrl:"https://maps.google.com/maps/api/js"}}ngOnDestroy(){this.api$.complete()}}return e.\u0275fac=function(e){s.fc()},e.\u0275dir=s.Ib({type:e}),e})(),y=(()=>{class e extends O{constructor(e,t){super(t),this.zone=e}load(){"undefined"!=typeof window&&("object"==typeof google&&"object"==typeof google.maps?this.api$.next(google.maps):document.querySelector("#ngui-map-api")||(window.nguiMapRef=window.nguiMapRef||[],window.nguiMapRef.push({zone:this.zone,componentFn:()=>this.api$.next(google.maps)}),this.addGoogleMapsApi()))}addGoogleMapsApi(){window.initNguiMap=window.initNguiMap||function(){window.nguiMapRef.forEach(e=>{e.zone.run((function(){e.componentFn()}))}),window.nguiMapRef.splice(0,window.nguiMapRef.length)};let e=document.createElement("script");e.id="ngui-map-api";let t=this.config.apiUrl;t+=-1!==t.indexOf("?")?"&":"?",e.src=t+"callback=initNguiMap",document.querySelector("body").appendChild(e)}}return e.\u0275fac=function(t){return new(t||e)(s.cc(s.B),s.cc(C,8))},e.\u0275prov=s.Jb({token:e,factory:e.\u0275fac}),e})(),w=(()=>{class e{constructor(e){this.apiLoader=e,this.apiLoaderSubs=[]}geocode(e){return new r.a(t=>{this.apiLoaderSubs.push(this.apiLoader.api$.subscribe(()=>this.requestGeocode(e,t)))})}ngOnDestroy(){this.apiLoaderSubs.map(e=>e.unsubscribe())}requestGeocode(e,t){(new google.maps.Geocoder).geocode(e,(function(e,o){o===google.maps.GeocoderStatus.OK?(t.next(e),t.complete()):t.error(e)}))}}return e.\u0275fac=function(t){return new(t||e)(s.cc(O))},e.\u0275prov=s.Jb({token:e,factory:e.\u0275fac}),e})(),v=(()=>{class e{constructor(e,t,o){this.geoCoder=e,this.optionBuilder=t,this.zone=o,this.updateGoogleObject=(e,t)=>{let o,i,n;if(e)for(let a in t)n="set"+a.replace(/^[a-z]/,e=>e.toUpperCase()),i=t[a].currentValue,-1!==["position","center"].indexOf(a)&&"string"==typeof i?(t=>{this.geoCoder.geocode({address:i}).subscribe(o=>{"function"==typeof e[t]?e[t](o[0].geometry.location):console.error('Not all options are dynamically updatable according to Googles Maps API V3 documentation.\nPlease check Google Maps API documentation, and use "setOptions" instead.')})})(n):(o=this.optionBuilder.googlize(i),"function"==typeof e[n]?e[n](o):console.error('Not all options are dynamically updatable according to Googles Maps API V3 documentation.\nPlease check Google Maps API documentation, and use "setOptions" instead.'))}}setObjectEvents(e,t,o){e.forEach(e=>{const i=this.getEventName(e),n=this.zone;n.runOutsideAngular(()=>{t[o].addListener(i,(function(o){let i=o||{};i.target=this,n.run(()=>t[e].emit(i))}))})})}clearObjectEvents(e,t,o){e.forEach(e=>{const i=this.getEventName(e);this.zone.runOutsideAngular(()=>{t[o]&&google.maps.event.clearListeners(t[o],i)})}),t[o]&&(t[o].setMap&&t[o].setMap(null),delete t[o].nguiMapComponent,delete t[o])}getEventName(e){return e.replace(/([A-Z])/g,e=>"_"+e.toLowerCase()).replace(/^map_/,"")}}return e.\u0275fac=function(t){return new(t||e)(s.cc(w),s.cc(b),s.cc(s.B))},e.\u0275prov=s.Jb({token:e,factory:e.\u0275fac}),e})();const M=["backgroundColor","center","disableDefaultUI","disableDoubleClickZoom","draggable","draggableCursor","draggingCursor","heading","keyboardShortcuts","mapMaker","mapTypeControl","mapTypeId","maxZoom","minZoom","noClear","overviewMapControl","panControl","panControlOptions","rotateControl","scaleControl","scrollwheel","streetView","styles","tilt","zoom","streetViewControl","zoomControl","zoomControlOptions","mapTypeControlOptions","overviewMapControlOptions","rotateControlOptions","scaleControlOptions","streetViewControlOptions","fullscreenControl","fullscreenControlOptions","options","geoFallbackCenter"],k=["bounds_changed","center_changed","click","dblclick","drag","dragend","dragstart","heading_changed","idle","maptypeid_changed","mousemove","mouseout","mouseover","projection_changed","resize","rightclick","tilesloaded","tile_changed","zoom_changed","mapClick","mapMouseover","mapMouseout","mapMousemove","mapDrag","mapDragend","mapDragstart"];let z=(()=>{class e{constructor(e,t,o,i,n,a,r){this.optionBuilder=e,this.elementRef=t,this.geolocation=o,this.geoCoder=i,this.nguiMap=n,this.apiLoader=a,this.zone=r,this.mapReady$=new s.o,this.mapOptions={},this.inputChanges$=new c.a,this.infoWindows={},this.mapIdledOnce=!1,this.initializeMapAfterDisplayed=!1,a.load(),k.forEach(e=>this[e]=new s.o)}ngAfterViewInit(){this.apiLoaderSub=this.apiLoader.api$.pipe(Object(l.a)()).subscribe(()=>this.initializeMap())}ngAfterViewChecked(){this.initializeMapAfterDisplayed&&this.el&&this.el.offsetWidth>0&&this.initializeMap()}ngOnChanges(e){this.inputChanges$.next(e)}initializeMap(){this.el=this.elementRef.nativeElement.querySelector(".google-map"),this.el&&0===this.el.offsetWidth?this.initializeMapAfterDisplayed=!0:(this.initializeMapAfterDisplayed=!1,this.mapOptions=this.optionBuilder.googlizeAllInputs(M,this),this.mapOptions.zoom=this.mapOptions.zoom||15,"string"==typeof this.mapOptions.center&&delete this.mapOptions.center,this.zone.runOutsideAngular(()=>{this.map=new google.maps.Map(this.el,this.mapOptions),this.map.mapObjectName="NguiMapComponent",this.mapOptions.center||this.setCenter(),this.nguiMap.setObjectEvents(k,this,"map"),this.map.addListener("idle",()=>{this.mapIdledOnce||(this.mapIdledOnce=!0,setTimeout(()=>{this.mapReady$.emit(this.map)}))}),this.inputChanges$.pipe(Object(g.a)(1e3),Object(d.a)(e=>this.nguiMap.updateGoogleObject(this.map,e))).subscribe(),"undefined"!=typeof window&&window.nguiMapRef&&(window.nguiMapRef.map=this.map)}))}setCenter(){this.center?"string"==typeof this.center&&this.geoCoder.geocode({address:this.center}).subscribe(e=>{this.map.setCenter(e[0].geometry.location)},e=>{this.map.setCenter(this.mapOptions.geoFallbackCenter||new google.maps.LatLng(0,0))}):this.geolocation.getCurrentPosition().subscribe(e=>{let t=new google.maps.LatLng(e.coords.latitude,e.coords.longitude);this.map.setCenter(t)},e=>{console.error("ngui-map: Error finding the current position"),this.map.setCenter(this.mapOptions.geoFallbackCenter||new google.maps.LatLng(0,0))})}openInfoWindow(e,t){this.infoWindows[e].open(t)}closeInfoWindow(e){this.infoWindows[e]&&this.infoWindows[e].close()}ngOnDestroy(){this.inputChanges$.complete(),this.el&&!this.initializeMapAfterDisplayed&&this.nguiMap.clearObjectEvents(k,this,"map"),this.apiLoaderSub&&this.apiLoaderSub.unsubscribe()}addToMapObjectGroup(e,t){let o=h(e.toLowerCase())+"s";this.map[o]=this.map[o]||[],this.map[o].push(t)}removeFromMapObjectGroup(e,t){let o=h(e.toLowerCase())+"s";if(this.map&&this.map[o]){let e=this.map[o].indexOf(t);e>-1&&this.map[o].splice(e,1)}}}return e.\u0275fac=function(t){return new(t||e)(s.Nb(b),s.Nb(s.l),s.Nb(f),s.Nb(w),s.Nb(v),s.Nb(O),s.Nb(s.B))},e.\u0275cmp=s.Hb({type:e,selectors:[["ngui-map"]],inputs:{backgroundColor:"backgroundColor",center:"center",disableDefaultUI:"disableDefaultUI",disableDoubleClickZoom:"disableDoubleClickZoom",draggable:"draggable",draggableCursor:"draggableCursor",draggingCursor:"draggingCursor",heading:"heading",keyboardShortcuts:"keyboardShortcuts",mapMaker:"mapMaker",mapTypeControl:"mapTypeControl",mapTypeId:"mapTypeId",maxZoom:"maxZoom",minZoom:"minZoom",noClear:"noClear",overviewMapControl:"overviewMapControl",panControl:"panControl",panControlOptions:"panControlOptions",rotateControl:"rotateControl",scaleControl:"scaleControl",scrollwheel:"scrollwheel",streetView:"streetView",styles:"styles",tilt:"tilt",zoom:"zoom",streetViewControl:"streetViewControl",zoomControl:"zoomControl",zoomControlOptions:"zoomControlOptions",mapTypeControlOptions:"mapTypeControlOptions",overviewMapControlOptions:"overviewMapControlOptions",rotateControlOptions:"rotateControlOptions",scaleControlOptions:"scaleControlOptions",streetViewControlOptions:"streetViewControlOptions",fullscreenControl:"fullscreenControl",fullscreenControlOptions:"fullscreenControlOptions",options:"options",geoFallbackCenter:"geoFallbackCenter"},outputs:{bounds_changed:"bounds_changed",center_changed:"center_changed",click:"click",dblclick:"dblclick",drag:"drag",dragend:"dragend",dragstart:"dragstart",heading_changed:"heading_changed",idle:"idle",maptypeid_changed:"maptypeid_changed",mousemove:"mousemove",mouseout:"mouseout",mouseover:"mouseover",projection_changed:"projection_changed",resize:"resize",rightclick:"rightclick",tilesloaded:"tilesloaded",tile_changed:"tile_changed",zoom_changed:"zoom_changed",mapClick:"mapClick",mapMouseover:"mapMouseover",mapMouseout:"mapMouseout",mapMousemove:"mapMousemove",mapDrag:"mapDrag",mapDragend:"mapDragend",mapDragstart:"mapDragstart",mapReady$:"mapReady$"},features:[s.Ab([v,b,w,f]),s.zb],ngContentSelectors:u,decls:2,vars:0,consts:[[1,"google-map"]],template:function(e,t){1&e&&(s.qc(),s.Ob(0,"div",0),s.pc(1))},styles:["\n    ngui-map {display: block; height: 300px;}\n    .google-map {width: 100%; height: 100%}\n  "],encapsulation:2}),e})();const j=["anchorPoint","animation","clickable","cursor","draggable","icon","label","opacity","optimized","place","position","shape","title","visible","zIndex","options","geoFallbackPosition"],S=["animationChanged","click","clickableChanged","cursorChanged","dblclick","drag","dragend","draggableChanged","dragstart","flatChanged","iconChanged","mousedown","mouseout","mouseover","mouseup","positionChanged","rightclick","shapeChanged","titleChanged","visibleChanged","zindexChanged"];let A=(()=>{class e extends m{constructor(e){super(e,"Marker",j,S),this.nguiMapComp=e,this.objectOptions={}}ngOnInit(){this.nguiMapComponent.mapIdledOnce?this.initialize():this.nguiMapComponent.mapReady$.subscribe(e=>this.initialize())}initialize(){super.initialize(),this.setPosition()}setPosition(){this.position?"string"==typeof this.position&&this._subscriptions.push(this.nguiMapComp.geoCoder.geocode({address:this.position}).subscribe(e=>{this.mapObject.setPosition(e[0].geometry.location)},e=>{console.error("ngui-map, error finding the location from",this.position),this.mapObject.setPosition(this.objectOptions.geoFallbackPosition||new google.maps.LatLng(0,0))})):this._subscriptions.push(this.nguiMapComp.geolocation.getCurrentPosition().subscribe(e=>{let t=new google.maps.LatLng(e.coords.latitude,e.coords.longitude);this.mapObject.setPosition(t)},e=>{console.error("ngui-map, error finding the current location"),this.mapObject.setPosition(this.objectOptions.geoFallbackPosition||new google.maps.LatLng(0,0))}))}}return e.\u0275fac=function(t){return new(t||e)(s.Nb(z))},e.\u0275dir=s.Ib({type:e,selectors:[["marker"]],inputs:{anchorPoint:"anchorPoint",animation:"animation",clickable:"clickable",cursor:"cursor",draggable:"draggable",icon:"icon",label:"label",opacity:"opacity",optimized:"optimized",place:"place",position:"position",shape:"shape",title:"title",visible:"visible",zIndex:"zIndex",options:"options",geoFallbackPosition:"geoFallbackPosition"},outputs:{animationChanged:"animationChanged",click:"click",clickableChanged:"clickableChanged",cursorChanged:"cursorChanged",dblclick:"dblclick",drag:"drag",dragend:"dragend",draggableChanged:"draggableChanged",dragstart:"dragstart",flatChanged:"flatChanged",iconChanged:"iconChanged",mousedown:"mousedown",mouseout:"mouseout",mouseover:"mouseover",mouseup:"mouseup",positionChanged:"positionChanged",rightclick:"rightclick",shapeChanged:"shapeChanged",titleChanged:"titleChanged",visibleChanged:"visibleChanged",zindexChanged:"zindexChanged"},features:[s.yb]}),e})(),L=(()=>{class e{static forRoot(t={}){return{ngModule:e,providers:[{provide:C,useValue:t}]}}}return e.\u0275mod=s.Lb({type:e}),e.\u0275inj=s.Kb({factory:function(t){return new(t||e)},providers:[w,f,v,b,{provide:O,useClass:y}],imports:[[n.c]]}),e})();const N=function(e){return[40.748817,e]},T=function(e){return[40.748817,e]},I=[{path:"",children:[{path:"fullscreen",component:(()=>{class e{ngOnInit(){}}return e.\u0275fac=function(t){return new(t||e)},e.\u0275cmp=s.Hb({type:e,selectors:[["fullscreen-map-cmp"]],decls:8,vars:3,consts:[[1,"main-content"],[1,"container-fluid"],[1,"card"],[1,"card-header"],[1,"card-title"],["zoom","13","center","40.748817,-73.985428"],[3,"position"]],template:function(e,t){1&e&&(s.Tb(0,"div",0),s.Tb(1,"div",1),s.Tb(2,"div",2),s.Tb(3,"div",3),s.Tb(4,"h4",4),s.Lc(5,"Full Screen Map"),s.Sb(),s.Sb(),s.Tb(6,"ngui-map",5),s.Ob(7,"marker",6),s.Sb(),s.Sb(),s.Sb(),s.Sb()),2&e&&(s.Bb(7),s.rc("position",s.vc(1,N,-73.985428)))},directives:[z,A],encapsulation:2}),e})()}]},{path:"",children:[{path:"google",component:(()=>{class e{ngOnInit(){}}return e.\u0275fac=function(t){return new(t||e)},e.\u0275cmp=s.Hb({type:e,selectors:[["vector-maps-cmp"]],decls:19,vars:6,consts:[[1,"main-content"],[1,"container-fluid"],[1,"row"],[1,"col-md-12"],[1,"card","card-map"],[1,"card-header"],[1,"card-title"],[1,"card-content"],["zoom","3","center","40.748817,-73.985428","mapTypeId","satellite"],[3,"position"],["zoom","13","center","40.748817,-73.985428"]],template:function(e,t){1&e&&(s.Tb(0,"div",0),s.Tb(1,"div",1),s.Tb(2,"div",2),s.Tb(3,"div",3),s.Tb(4,"div",4),s.Tb(5,"div",5),s.Tb(6,"h4",6),s.Lc(7,"Satellite Map"),s.Sb(),s.Sb(),s.Tb(8,"div",7),s.Tb(9,"ngui-map",8),s.Ob(10,"marker",9),s.Sb(),s.Sb(),s.Sb(),s.Sb(),s.Tb(11,"div",3),s.Tb(12,"div",4),s.Tb(13,"div",5),s.Tb(14,"h4",6),s.Lc(15,"Regular Map"),s.Sb(),s.Sb(),s.Tb(16,"div",7),s.Tb(17,"ngui-map",10),s.Ob(18,"marker",9),s.Sb(),s.Sb(),s.Sb(),s.Sb(),s.Sb(),s.Sb(),s.Sb()),2&e&&(s.Bb(10),s.rc("position",s.vc(2,T,-73.985428)),s.Bb(8),s.rc("position",s.vc(4,T,-73.985428)))},directives:[z,A],encapsulation:2}),e})()}]},{path:"",children:[{path:"vector",component:(()=>{class e{ngOnInit(){$("#worldMap").vectorMap({map:"world_mill_en",backgroundColor:"transparent",zoomOnScroll:!1,regionStyle:{initial:{fill:"#e4e4e4","fill-opacity":.9,stroke:"none","stroke-width":0,"stroke-opacity":0}},series:{regions:[{values:{AU:760,BR:550,CA:120,DE:1300,FR:540,GB:690,GE:200,IN:200,RO:600,RU:300,US:2920},scale:["#AAAAAA","#444444"],normalizeFunction:"polynomial"}]}})}}return e.\u0275fac=function(t){return new(t||e)},e.\u0275cmp=s.Hb({type:e,selectors:[["vector-maps-cmp"]],decls:15,vars:0,consts:[[1,"main-content"],[1,"container-fluid"],[1,"row"],[1,"col-md-12"],[1,"text-center"],["target","_blank","href","http://jvectormap.com/"],[1,"card","card-plain"],[1,"card-content"],["id","worldMap",1,"map","map-big"]],template:function(e,t){1&e&&(s.Tb(0,"div",0),s.Tb(1,"div",1),s.Tb(2,"div",2),s.Tb(3,"div",3),s.Tb(4,"h3",4),s.Lc(5," World Map"),s.Ob(6,"br"),s.Tb(7,"small"),s.Lc(8," Looks great on any resolution. Made by our friends from "),s.Tb(9,"a",5),s.Lc(10,"jVector Map"),s.Sb(),s.Lc(11,". "),s.Sb(),s.Sb(),s.Tb(12,"div",6),s.Tb(13,"div",7),s.Ob(14,"div",8),s.Sb(),s.Sb(),s.Sb(),s.Sb(),s.Sb(),s.Sb())},encapsulation:2}),e})()}]}];let _=(()=>{class e{}return e.\u0275mod=s.Lb({type:e}),e.\u0275inj=s.Kb({factory:function(t){return new(t||e)},imports:[[n.c,i.f.forChild(I),a.f,L.forRoot({apiUrl:"https://maps.google.com/maps/api/js?key=AIzaSyBr-tgUtpm8cyjYVQDrjs8YpZH7zBNWPuY"})]]}),e})()}}]);